// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCampaignsMenager.Data;

#nullable disable

namespace ProductCampaignsMenager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221204014500_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductCampaignsMenager.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"));

                    b.Property<int>("BidAmount")
                        .HasColumnType("int");

                    b.Property<int>("CampaignFund")
                        .HasColumnType("int");

                    b.Property<int>("CampaignKeywords")
                        .HasColumnType("int");

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Radius")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.HasKey("CampaignId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TownId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("ProductCampaignsMenager.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CampaignCount")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductCampaignsMenager.Models.Town", b =>
                {
                    b.Property<int>("TownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TownId"));

                    b.Property<string>("TownName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TownId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("ProductCampaignsMenager.Models.Campaign", b =>
                {
                    b.HasOne("ProductCampaignsMenager.Models.Product", "Product")
                        .WithMany("Campaign")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductCampaignsMenager.Models.Town", "Town")
                        .WithMany("Campaign")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("ProductCampaignsMenager.Models.Product", b =>
                {
                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("ProductCampaignsMenager.Models.Town", b =>
                {
                    b.Navigation("Campaign");
                });
#pragma warning restore 612, 618
        }
    }
}
